I have this quiz website code and the user flow document of it. Now help me to do the below task.
1. I want to store the final results into postgress db using prisma orm and also send the customize personal email to the users submitting this form. If you can then implement it and guide me how to reflect the changes in the local and production enviroment.
2. Make sure that any data is not leakead and secure.




==========================================================================================
Quiz Flow (Interactive Decision Tree)


Step 1: What brings you here today? (Multi-select)
I want to check if I have a hormonal imbalance


I’m struggling with weight gain


I have skin or hair concerns


I’m planning for pregnancy


I’m currently pregnant and want to support my body


I think I may be in perimenopause or menopause


I feel tired or not like myself


I’ve been diagnosed before and need support


Just curious


Step 2: Diagnosis Awareness
🔁 If “diagnosed” selected:
“What have you been diagnosed with?”
 PCOS, Hypothyroidism, Hashimoto’s, Insulin resistance, Endometriosis, Premature menopause, Other (same as below question but without none/not sure )
For all others:
“Do you experience any of the following hormonal health issues(Check all that applies)?”
PCOS/ PCOD
Thyroid Disorders(e.g, Hypothyroidism, Hashimoto’s)


Menstrual Irregularities
Weigh fluctuations 


Endometriosis


Menopause (Post/Peri)
Insulin Resistance


None / Not sure


🔁 If “None / Not sure” selected:
“Have you ever been recommended a hormone test, thyroid test, or ultrasound?”
Yes, and did the tests


Yes, but didn’t do it


No, never


Step 2: Symptom Tracker (Multi-select)
🩸 Menstrual Health (Have these as different questions , we can even block 4-5 questions symptoms together so that it’s easier to determine which question to ask in last)
Irregular cycles (<21 or >35 days) 1


Very painful periods


Heavy bleeding or clotting


Missed periods


Decreased frequency of menses


🧖 Skin & Hair
Acne (jawline or chin) 2


Hair thinning or hair fall 3


Excess facial or body hair 4


💤 Energy & Mood
Constant fatigue / low energy


Brain fog


Mood swings or irritability


⚖️ Weight & Metabolism
Sudden or stubborn weight gain


Difficulty losing weight


Sugar cravings / feel hangry
Frequent bowel movements


🔥 Sleep & Body
Trouble falling asleep


Waking up tired


Hot flashes or night sweats


Joint pain or body aches
Low Libido
Frequent urination




Step 3: Symptom Duration
Less than 3 months


3–12 months


1–3 years


More than 3 years


Can’t remember





Step 5: Conditional Deep-Dives
A. If PCOS or irregular periods + acne + fatigue → Ask:
“Do any of these apply?”
Diagnosed via ultrasound (cysts seen)


High AMH


High androgens (acne/hair)


Diagnosed insulin resistance


Not sure


Question on cycle length:
B. If perimenopause/menopause OR hot flashes + poor sleep → Ask:
“Do any of these apply?”
Periods reducing in frequency


Hot flashes


Vaginal dryness / discomfort


Disturbed sleep


Periods stopped before age 40


Not sure


C. If “pregnancy” selected → Ask:
“What do you want support with?”
Nutrition in pregnancy


PCOS/thyroid management in pregnancy


Healthy weight gain


Gut or digestion issues


Not sure




Step 6: Readiness for Support
“Would you like a personalized summary or expert guidance based on your responses?”
Yes, book a free call


Yes, WhatsApp me


Maybe later


No thanks




🧭 Outcome Logic (Internal Use)
Type of Case
Output Suggestion
3+ red flag symptoms, no diagnosis
“You may be dealing with a hormonal imbalance. Let’s help you decode what’s going on.”
Already diagnosed
“We help women with [condition] manage symptoms and feel better. Want a plan?”
Pregnancy + hormonal history
“We can support you through pregnancy safely and holistically.”
Mild symptoms or just curious
“No urgent signs now, but your body is always signaling. Work with us to improve your health.”


📚 Note on PCOS & Rotterdam Criteria
While the quiz does not mention the Rotterdam Criteria explicitly, the structure mirrors the diagnostic logic:
Rotterdam Criteria
Quiz Mapping
Irregular/absent ovulation
✅ Irregular periods, missed periods, decreased frequency of menses
Hyperandrogenism (clinical/biochemical)
✅ Acne, facial/body hair questions
Polycystic ovaries (via scan)
✅ Ultrasound follow-up question
If a user selects 2 or more of these criteria, we can show:
 “Your symptoms meet at least 2 of the 3 signs commonly used to assess PCOS. Let’s help you get a proper workup and plan.”
 ====================================================================================================










import React, { useState } from 'react';
import { ChevronRight, ChevronLeft, Heart, Calendar, Droplets, Moon, Scale, Thermometer, CheckCircle } from 'lucide-react';

const HormonalHealthQuiz = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const [answers, setAnswers] = useState({
    reasons: [],
    diagnosed: false,
    diagnosedWith: [],
    conditions: [],
    testsRecommended: '',
    menstrualSymptoms: [],
    skinHairSymptoms: [],
    energyMoodSymptoms: [],
    weightMetabolismSymptoms: [],
    sleepBodySymptoms: [],
    symptomDuration: '',
    pcosDetails: [],
    menopauseDetails: [],
    pregnancySupport: [],
    readinessForSupport: ''
  });

  const handleMultiSelect = (category, value) => {
    setAnswers(prev => ({
      ...prev,
      [category]: prev[category].includes(value)
        ? prev[category].filter(item => item !== value)
        : [...prev[category], value]
    }));
  };

  const handleSingleSelect = (category, value) => {
    setAnswers(prev => ({
      ...prev,
      [category]: value
    }));
  };

  const nextStep = () => {
    setCurrentStep(prev => prev + 1);
  };

  const prevStep = () => {
    setCurrentStep(prev => prev - 1);
  };

  const shouldShowConditionalStep = () => {
    // PCOS pathway
    if (answers.conditions.includes('PCOS/ PCOD') || 
        (answers.menstrualSymptoms.some(s => s.includes('Irregular') || s.includes('Missed')) &&
         answers.skinHairSymptoms.includes('Acne (jawline or chin)') &&
         answers.energyMoodSymptoms.includes('Constant fatigue / low energy'))) {
      return 'pcos';
    }
    
    // Menopause pathway
    if (answers.reasons.includes("I think I may be in perimenopause or menopause") ||
        answers.conditions.includes('Menopause (Post/Peri)') ||
        answers.sleepBodySymptoms.includes('Hot flashes or night sweats')) {
      return 'menopause';
    }
    
    // Pregnancy pathway
    if (answers.reasons.includes("I'm planning for pregnancy") ||
        answers.reasons.includes("I'm currently pregnant and want to support my body")) {
      return 'pregnancy';
    }
    
    return null;
  };

  const getOutcomeType = () => {
    const symptomCount = [
      ...answers.menstrualSymptoms,
      ...answers.skinHairSymptoms,
      ...answers.energyMoodSymptoms,
      ...answers.weightMetabolismSymptoms,
      ...answers.sleepBodySymptoms
    ].length;

    if (answers.diagnosed) {
      return 'diagnosed';
    } else if (symptomCount >= 3) {
      return 'redFlags';
    } else if (answers.reasons.includes("I'm planning for pregnancy") || 
               answers.reasons.includes("I'm currently pregnant and want to support my body")) {
      return 'pregnancy';
    } else {
      return 'mild';
    }
  };

  const getPersonalizedMessage = () => {
    const outcomeType = getOutcomeType();
    
    switch (outcomeType) {
      case 'redFlags':
        return "You may be dealing with a hormonal imbalance. Let's help you decode what's going on.";
      case 'diagnosed':
        return `We help women with ${answers.diagnosedWith.join(', ')} manage symptoms and feel better. Want a plan?`;
      case 'pregnancy':
        return "We can support you through pregnancy safely and holistically.";
      default:
        return "No urgent signs now, but your body is always signaling. Work with us to improve your health.";
    }
  };

  const checkPCOSCriteria = () => {
    const irregularPeriods = answers.menstrualSymptoms.some(s => 
      s.includes('Irregular') || s.includes('Missed') || s.includes('Decreased frequency')
    );
    const hyperandrogenism = answers.skinHairSymptoms.includes('Acne (jawline or chin)') ||
                            answers.skinHairSymptoms.includes('Excess facial or body hair');
    const ultrasoundConfirmed = answers.pcosDetails.includes('Diagnosed via ultrasound (cysts seen)');
    
    const criteriaCount = [irregularPeriods, hyperandrogenism, ultrasoundConfirmed].filter(Boolean).length;
    
    return criteriaCount >= 2;
  };

  const renderStep1 = () => (
    <div className="space-y-6">
      <div className="text-center">
        <Heart className="w-12 h-12 text-pink-500 mx-auto mb-4" />
        <h2 className="text-2xl font-bold text-gray-800 mb-2">What brings you here today?</h2>
        <p className="text-gray-600">Select all that apply</p>
      </div>
      
      <div className="space-y-3">
        {[
          "I want to check if I have a hormonal imbalance",
          "I'm struggling with weight gain",
          "I have skin or hair concerns",
          "I'm planning for pregnancy",
          "I'm currently pregnant and want to support my body",
          "I think I may be in perimenopause or menopause",
          "I feel tired or not like myself",
          "I've been diagnosed before and need support",
          "Just curious"
        ].map((reason) => (
          <label key={reason} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
            <input
              type="checkbox"
              checked={answers.reasons.includes(reason)}
              onChange={() => handleMultiSelect('reasons', reason)}
              className="w-5 h-5 text-pink-500 rounded focus:ring-pink-500"
            />
            <span className="ml-3 text-gray-700">{reason}</span>
          </label>
        ))}
      </div>
    </div>
  );

  const renderStep2 = () => {
    const isDiagnosed = answers.reasons.includes("I've been diagnosed before and need support");
    
    return (
      <div className="space-y-6">
        <div className="text-center">
          <CheckCircle className="w-12 h-12 text-blue-500 mx-auto mb-4" />
          <h2 className="text-2xl font-bold text-gray-800 mb-2">
            {isDiagnosed ? "What have you been diagnosed with?" : "Do you experience any hormonal health issues?"}
          </h2>
          <p className="text-gray-600">Check all that apply</p>
        </div>
        
        <div className="space-y-3">
          {[
            "PCOS/ PCOD",
            "Thyroid Disorders (e.g, Hypothyroidism, Hashimoto's)",
            "Menstrual Irregularities",
            "Weight fluctuations",
            "Endometriosis",
            "Menopause (Post/Peri)",
            "Insulin Resistance",
            ...(isDiagnosed ? [] : ["None / Not sure"])
          ].map((condition) => (
            <label key={condition} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={answers.conditions.includes(condition)}
                onChange={() => {
                  if (isDiagnosed) {
                    handleMultiSelect('diagnosedWith', condition);
                    setAnswers(prev => ({ ...prev, diagnosed: true }));
                  }
                  handleMultiSelect('conditions', condition);
                }}
                className="w-5 h-5 text-pink-500 rounded focus:ring-pink-500"
              />
              <span className="ml-3 text-gray-700">{condition}</span>
            </label>
          ))}
        </div>
      </div>
    );
  };

  const renderTestRecommendationStep = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-gray-800 mb-2">Have you ever been recommended a hormone test, thyroid test, or ultrasound?</h2>
      </div>
      
      <div className="space-y-3">
        {[
          "Yes, and did the tests",
          "Yes, but didn't do it",
          "No, never"
        ].map((option) => (
          <label key={option} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
            <input
              type="radio"
              name="testsRecommended"
              value={option}
              checked={answers.testsRecommended === option}
              onChange={(e) => handleSingleSelect('testsRecommended', e.target.value)}
              className="w-5 h-5 text-pink-500 focus:ring-pink-500"
            />
            <span className="ml-3 text-gray-700">{option}</span>
          </label>
        ))}
      </div>
    </div>
  );

  const renderSymptomStep = () => (
    <div className="space-y-8">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-gray-800 mb-2">Tell us about your symptoms</h2>
        <p className="text-gray-600">Select all that you experience</p>
      </div>

      {/* Menstrual Health */}
      <div className="bg-red-50 p-6 rounded-lg">
        <div className="flex items-center mb-4">
          <Droplets className="w-6 h-6 text-red-500 mr-2" />
          <h3 className="text-lg font-semibold text-gray-800">Menstrual Health</h3>
        </div>
        <div className="space-y-2">
          {[
            "Irregular cycles (<21 or >35 days)",
            "Very painful periods",
            "Heavy bleeding or clotting",
            "Missed periods",
            "Decreased frequency of menses"
          ].map((symptom) => (
            <label key={symptom} className="flex items-center cursor-pointer">
              <input
                type="checkbox"
                checked={answers.menstrualSymptoms.includes(symptom)}
                onChange={() => handleMultiSelect('menstrualSymptoms', symptom)}
                className="w-4 h-4 text-red-500 rounded focus:ring-red-500"
              />
              <span className="ml-3 text-gray-700">{symptom}</span>
            </label>
          ))}
        </div>
      </div>

      {/* Skin & Hair */}
      <div className="bg-purple-50 p-6 rounded-lg">
        <div className="flex items-center mb-4">
          <Moon className="w-6 h-6 text-purple-500 mr-2" />
          <h3 className="text-lg font-semibold text-gray-800">Skin & Hair</h3>
        </div>
        <div className="space-y-2">
          {[
            "Acne (jawline or chin)",
            "Hair thinning or hair fall",
            "Excess facial or body hair"
          ].map((symptom) => (
            <label key={symptom} className="flex items-center cursor-pointer">
              <input
                type="checkbox"
                checked={answers.skinHairSymptoms.includes(symptom)}
                onChange={() => handleMultiSelect('skinHairSymptoms', symptom)}
                className="w-4 h-4 text-purple-500 rounded focus:ring-purple-500"
              />
              <span className="ml-3 text-gray-700">{symptom}</span>
            </label>
          ))}
        </div>
      </div>

      {/* Energy & Mood */}
      <div className="bg-yellow-50 p-6 rounded-lg">
        <div className="flex items-center mb-4">
          <Calendar className="w-6 h-6 text-yellow-600 mr-2" />
          <h3 className="text-lg font-semibold text-gray-800">Energy & Mood</h3>
        </div>
        <div className="space-y-2">
          {[
            "Constant fatigue / low energy",
            "Brain fog",
            "Mood swings or irritability"
          ].map((symptom) => (
            <label key={symptom} className="flex items-center cursor-pointer">
              <input
                type="checkbox"
                checked={answers.energyMoodSymptoms.includes(symptom)}
                onChange={() => handleMultiSelect('energyMoodSymptoms', symptom)}
                className="w-4 h-4 text-yellow-600 rounded focus:ring-yellow-600"
              />
              <span className="ml-3 text-gray-700">{symptom}</span>
            </label>
          ))}
        </div>
      </div>

      {/* Weight & Metabolism */}
      <div className="bg-green-50 p-6 rounded-lg">
        <div className="flex items-center mb-4">
          <Scale className="w-6 h-6 text-green-600 mr-2" />
          <h3 className="text-lg font-semibold text-gray-800">Weight & Metabolism</h3>
        </div>
        <div className="space-y-2">
          {[
            "Sudden or stubborn weight gain",
            "Difficulty losing weight",
            "Sugar cravings / feel hangry",
            "Frequent bowel movements"
          ].map((symptom) => (
            <label key={symptom} className="flex items-center cursor-pointer">
              <input
                type="checkbox"
                checked={answers.weightMetabolismSymptoms.includes(symptom)}
                onChange={() => handleMultiSelect('weightMetabolismSymptoms', symptom)}
                className="w-4 h-4 text-green-600 rounded focus:ring-green-600"
              />
              <span className="ml-3 text-gray-700">{symptom}</span>
            </label>
          ))}
        </div>
      </div>

      {/* Sleep & Body */}
      <div className="bg-blue-50 p-6 rounded-lg">
        <div className="flex items-center mb-4">
          <Thermometer className="w-6 h-6 text-blue-600 mr-2" />
          <h3 className="text-lg font-semibold text-gray-800">Sleep & Body</h3>
        </div>
        <div className="space-y-2">
          {[
            "Trouble falling asleep",
            "Waking up tired",
            "Hot flashes or night sweats",
            "Joint pain or body aches",
            "Low Libido",
            "Frequent urination"
          ].map((symptom) => (
            <label key={symptom} className="flex items-center cursor-pointer">
              <input
                type="checkbox"
                checked={answers.sleepBodySymptoms.includes(symptom)}
                onChange={() => handleMultiSelect('sleepBodySymptoms', symptom)}
                className="w-4 h-4 text-blue-600 rounded focus:ring-blue-600"
              />
              <span className="ml-3 text-gray-700">{symptom}</span>
            </label>
          ))}
        </div>
      </div>
    </div>
  );

  const renderDurationStep = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-gray-800 mb-2">How long have you been experiencing these symptoms?</h2>
      </div>
      
      <div className="space-y-3">
        {[
          "Less than 3 months",
          "3–12 months",
          "1–3 years",
          "More than 3 years",
          "Can't remember"
        ].map((duration) => (
          <label key={duration} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
            <input
              type="radio"
              name="symptomDuration"
              value={duration}
              checked={answers.symptomDuration === duration}
              onChange={(e) => handleSingleSelect('symptomDuration', e.target.value)}
              className="w-5 h-5 text-pink-500 focus:ring-pink-500"
            />
            <span className="ml-3 text-gray-700">{duration}</span>
          </label>
        ))}
      </div>
    </div>
  );

  const renderConditionalStep = () => {
    const pathway = shouldShowConditionalStep();
    
    if (pathway === 'pcos') {
      return (
        <div className="space-y-6">
          <div className="text-center">
            <h2 className="text-2xl font-bold text-gray-800 mb-2">PCOS Assessment</h2>
            <p className="text-gray-600">Do any of these apply to you?</p>
          </div>
          
          <div className="space-y-3">
            {[
              "Diagnosed via ultrasound (cysts seen)",
              "High AMH",
              "High androgens (acne/hair)",
              "Diagnosed insulin resistance",
              "Not sure"
            ].map((detail) => (
              <label key={detail} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
                <input
                  type="checkbox"
                  checked={answers.pcosDetails.includes(detail)}
                  onChange={() => handleMultiSelect('pcosDetails', detail)}
                  className="w-5 h-5 text-pink-500 rounded focus:ring-pink-500"
                />
                <span className="ml-3 text-gray-700">{detail}</span>
              </label>
            ))}
          </div>
        </div>
      );
    }
    
    if (pathway === 'menopause') {
      return (
        <div className="space-y-6">
          <div className="text-center">
            <h2 className="text-2xl font-bold text-gray-800 mb-2">Menopause Assessment</h2>
            <p className="text-gray-600">Do any of these apply to you?</p>
          </div>
          
          <div className="space-y-3">
            {[
              "Periods reducing in frequency",
              "Hot flashes",
              "Vaginal dryness / discomfort",
              "Disturbed sleep",
              "Periods stopped before age 40",
              "Not sure"
            ].map((detail) => (
              <label key={detail} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
                <input
                  type="checkbox"
                  checked={answers.menopauseDetails.includes(detail)}
                  onChange={() => handleMultiSelect('menopauseDetails', detail)}
                  className="w-5 h-5 text-pink-500 rounded focus:ring-pink-500"
                />
                <span className="ml-3 text-gray-700">{detail}</span>
              </label>
            ))}
          </div>
        </div>
      );
    }
    
    if (pathway === 'pregnancy') {
      return (
        <div className="space-y-6">
          <div className="text-center">
            <h2 className="text-2xl font-bold text-gray-800 mb-2">Pregnancy Support</h2>
            <p className="text-gray-600">What do you want support with?</p>
          </div>
          
          <div className="space-y-3">
            {[
              "Nutrition in pregnancy",
              "PCOS/thyroid management in pregnancy",
              "Healthy weight gain",
              "Gut or digestion issues",
              "Not sure"
            ].map((support) => (
              <label key={support} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
                <input
                  type="checkbox"
                  checked={answers.pregnancySupport.includes(support)}
                  onChange={() => handleMultiSelect('pregnancySupport', support)}
                  className="w-5 h-5 text-pink-500 rounded focus:ring-pink-500"
                />
                <span className="ml-3 text-gray-700">{support}</span>
              </label>
            ))}
          </div>
        </div>
      );
    }
    
    return null;
  };

  const renderSupportStep = () => (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-gray-800 mb-2">Would you like personalized guidance?</h2>
        <p className="text-gray-600">Based on your responses, we can provide expert support</p>
      </div>
      
      <div className="space-y-3">
        {[
          "Yes, book a free call",
          "Yes, WhatsApp me",
          "Maybe later",
          "No thanks"
        ].map((option) => (
          <label key={option} className="flex items-center p-4 border rounded-lg cursor-pointer hover:bg-gray-50 transition-colors">
            <input
              type="radio"
              name="readinessForSupport"
              value={option}
              checked={answers.readinessForSupport === option}
              onChange={(e) => handleSingleSelect('readinessForSupport', e.target.value)}
              className="w-5 h-5 text-pink-500 focus:ring-pink-500"
            />
            <span className="ml-3 text-gray-700">{option}</span>
          </label>
        ))}
      </div>
    </div>
  );

  const renderResults = () => {
    const pcosMatch = checkPCOSCriteria();
    
    return (
      <div className="space-y-8">
        <div className="text-center">
          <CheckCircle className="w-16 h-16 text-green-500 mx-auto mb-4" />
          <h2 className="text-3xl font-bold text-gray-800 mb-4">Your Personalized Assessment</h2>
        </div>
        
        <div className="bg-gradient-to-r from-pink-50 to-purple-50 p-8 rounded-xl border border-pink-200">
          <h3 className="text-xl font-semibold text-gray-800 mb-4">Our Recommendation:</h3>
          <p className="text-lg text-gray-700 leading-relaxed">{getPersonalizedMessage()}</p>
        </div>
        
        {pcosMatch && (
          <div className="bg-blue-50 p-6 rounded-xl border border-blue-200">
            <h4 className="font-semibold text-blue-800 mb-2">PCOS Assessment Note:</h4>
            <p className="text-blue-700">Your symptoms meet at least 2 of the 3 signs commonly used to assess PCOS. Let's help you get a proper workup and plan.</p>
          </div>
        )}
        
        <div className="bg-gray-50 p-6 rounded-xl">
          <h4 className="font-semibold text-gray-800 mb-4">Summary of Your Responses:</h4>
          <div className="grid md:grid-cols-2 gap-4 text-sm">
            <div>
              <p className="font-medium text-gray-700">Main Concerns:</p>
              <ul className="list-disc list-inside text-gray-600 mt-1">
                {answers.reasons.map((reason, idx) => (
                  <li key={idx}>{reason}</li>
                ))}
              </ul>
            </div>
            <div>
              <p className="font-medium text-gray-700">Symptom Duration:</p>
              <p className="text-gray-600 mt-1">{answers.symptomDuration}</p>
            </div>
          </div>
        </div>
        
        {answers.readinessForSupport && answers.readinessForSupport.startsWith('Yes') && (
          <div className="text-center">
            <div className="bg-pink-500 text-white p-6 rounded-xl">
              <h4 className="text-lg font-semibold mb-2">Next Steps</h4>
              <p>
                {answers.readinessForSupport === 'Yes, book a free call' 
                  ? "We'll be in touch soon to schedule your free consultation call."
                  : "We'll send you personalized guidance via WhatsApp."}
              </p>
            </div>
          </div>
        )}
      </div>
    );
  };

  const getTotalSteps = () => {
    let steps = 6; // Base steps: 1-4, duration, support
    
    if (answers.conditions.includes('None / Not sure')) {
      steps += 1; // Test recommendation step
    }
    
    if (shouldShowConditionalStep()) {
      steps += 1; // Conditional step
    }
    
    return steps;
  };

  const getCurrentStepContent = () => {
    let adjustedStep = currentStep;
    
    // Adjust for test recommendation step
    if (currentStep === 3 && answers.conditions.includes('None / Not sure')) {
      return renderTestRecommendationStep();
    } else if (currentStep > 3 && answers.conditions.includes('None / Not sure')) {
      adjustedStep = currentStep - 1;
    }
    
    // Adjust for conditional step
    const conditionalStepPosition = answers.conditions.includes('None / Not sure') ? 6 : 5;
    if (currentStep === conditionalStepPosition && shouldShowConditionalStep()) {
      return renderConditionalStep();
    } else if (currentStep > conditionalStepPosition && shouldShowConditionalStep()) {
      adjustedStep = adjustedStep - 1;
    }
    
    switch (adjustedStep) {
      case 1: return renderStep1();
      case 2: return renderStep2();
      case 3: return renderSymptomStep();
      case 4: return renderDurationStep();
      case 5: return renderSupportStep();
      case 6: return renderResults();
      default: return renderStep1();
    }
  };

  const canProceed = () => {
    switch (currentStep) {
      case 1: return answers.reasons.length > 0;
      case 2: return answers.conditions.length > 0;
      case 3: 
        if (answers.conditions.includes('None / Not sure')) {
          return answers.testsRecommended !== '';
        }
        return true; // Symptoms step is optional
      default: return true;
    }
  };

  const isLastStep = currentStep === getTotalSteps();

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className="mb-8">
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-3xl font-bold text-gray-800">Hormonal Health Assessment</h1>
          <div className="text-sm text-gray-500">
            Step {currentStep} of {getTotalSteps()}
          </div>
        </div>
        <div className="w-full bg-gray-200 rounded-full h-2">
          <div 
            className="bg-gradient-to-r from-pink-500 to-purple-600 h-2 rounded-full transition-all duration-300"
            style={{ width: `${(currentStep / getTotalSteps()) * 100}%` }}
          ></div>
        </div>
      </div>

      <div className="bg-white rounded-xl shadow-lg p-8 mb-8">
        {getCurrentStepContent()}
      </div>

      <div className="flex justify-between">
        {currentStep > 1 && (
          <button
            onClick={prevStep}
            className="flex items-center px-6 py-3 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors"
          >
            <ChevronLeft className="w-5 h-5 mr-2" />
            Previous
          </button>
        )}
        
        <div className="ml-auto">
          {!isLastStep ? (
            <button
              onClick={nextStep}
              disabled={!canProceed()}
              className="flex items-center px-6 py-3 bg-gradient-to-r from-pink-500 to-purple-600 text-white rounded-lg hover:from-pink-600 hover:to-purple-700 transition-all disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Next
              <ChevronRight className="w-5 h-5 ml-2" />
            </button>
          ) : (
            <button
              onClick={() => window.location.reload()}
              className="px-6 py-3 bg-gradient-to-r from-green-500 to-blue-600 text-white rounded-lg hover:from-green-600 hover:to-blue-700 transition-all"
            >
              Start New Assessment
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default HormonalHealthQuiz;
